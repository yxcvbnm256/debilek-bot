name: Build and Push ARM64 Docker Image

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: debilek-bot
  TARGET: aarch64-unknown-linux-gnu

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies for Cross
        run: |
          apt-get update && apt-get install -y curl unzip build-essential pkg-config libssl-dev:arm64 ca-certificates
          cargo install cross
          cross build --target aarch64-unknown-linux-gnu --release

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate .env File
        if: github.event_name == 'push'
        run: |
          echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" >> .env
          echo "TTS_KEY=${{ secrets.TTS_KEY }}" >> .env
          echo "TTS_URL=${{ vars.TTS_URL }}" >> .env
          echo "CONFIG=${{ vars.CONFIG }}" >> .env

      

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name == 'push' }}
          platforms: linux/arm64
          file: Dockerfile
          tags: latest