name: Build and Push ARM64 Docker Image

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-gnu
          override: true

      - name: Install dependencies (CMake, linker, etc.)
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt-get update
          sudo apt-get install -y \
            curl \
            unzip \
            build-essential \
            pkg-config \
            gcc-aarch64-linux-gnu \
            libc6:arm64 \
            libssl-dev
            
          curl -L https://github.com/Kitware/CMake/releases/download/v3.27.0/cmake-3.27.0-linux-aarch64.tar.gz -o cmake.tar.gz
          tar -xzf cmake.tar.gz
          sudo cp -r cmake-3.27.0-linux-aarch64/bin/* /usr/local/bin/
          sudo cp -r cmake-3.27.0-linux-aarch64/share/* /usr/local/share/

      - name: Build Rust binary for ARM64
        run: cargo build --release --target=aarch64-unknown-linux-gnu

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate .env File
        if: github.event_name == 'push'
        run: |
          echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" >> .env
          echo "TTS_KEY=${{ secrets.TTS_KEY }}" >> .env
          echo "TTS_URL=${{ vars.URL }}" >> .env
          echo "CONFIG=${{ vars.CONFIG }}" >> .env

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name == 'push' }}
          platforms: linux/arm64
          file: Dockerfile.arm
          tags: latest